{
  "uid" : "e0629926c83ba0c4",
  "name" : "Unsuccessful login",
  "fullName" : "tests.test_index_page#test_unsuccessful_login",
  "historyId" : "c8af2a131b02258090acaa95b6d362a5",
  "time" : {
    "start" : 1703954696521,
    "stop" : 1703954696689,
    "duration" : 168
  },
  "description" : "Unsuccess login",
  "descriptionHtml" : "<p>Unsuccess login</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: expected txt: Username field cannot be emp2ty, but actual txt: Username field cannot be empty",
  "statusTrace" : "index_page_instance = <pages.index_page.IndexPage object at 0x7fc0226215d0>\nun_login = '', un_password = 'correct_username'\nun_text = 'Username field cannot be emp2ty'\n\n    @allure.description('Unsuccess login')\n    @allure.label('owner', 'Sergey')\n    @allure.title('Unsuccessful login')\n    @allure.suite('Authorization suite')\n    @mark.index\n    @pytest.mark.parametrize('un_login, un_password, un_text', (incorrect_1, incorrect_2, incorrect_3, incorrect_4))\n    def test_unsuccessful_login(index_page_instance, un_login, un_password, un_text):\n        index_page_instance.enter_username(un_login)\n        index_page_instance.enter_password(un_password)\n        index_page_instance.click_to_login_btn()\n>       index_page_instance.verify_incorrect_login(un_text)\n\ntests/test_index_page.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/index_page.py:46: in verify_incorrect_login\n    self.assert_equal(self.get_text(self.ERROR_TEXT), expected=text)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nactual = 'Username field cannot be empty'\nexpected = 'Username field cannot be emp2ty'\n\n    @staticmethod\n    def assert_equal(actual, expected):\n>       assert actual == expected, AssertionsErrors.ERROR_EQUAL.format(expected, actual)\nE       AssertionError: expected txt: Username field cannot be emp2ty, but actual txt: Username field cannot be empty\n\nsupport/assertions.py:7: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "index_page_instance",
    "time" : {
      "start" : 1703954696424,
      "stop" : 1703954696520,
      "duration" : 96
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "screenshot_on_failures",
    "time" : {
      "start" : 1703954696424,
      "stop" : 1703954696424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_chrome_options",
    "time" : {
      "start" : 1703954695642,
      "stop" : 1703954695642,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_webdriver",
    "time" : {
      "start" : 1703954695642,
      "stop" : 1703954696424,
      "duration" : 782
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Unsuccess login",
    "status" : "failed",
    "statusMessage" : "AssertionError: expected txt: Username field cannot be emp2ty, but actual txt: Username field cannot be empty",
    "statusTrace" : "index_page_instance = <pages.index_page.IndexPage object at 0x7fc0226215d0>\nun_login = '', un_password = 'correct_username'\nun_text = 'Username field cannot be emp2ty'\n\n    @allure.description('Unsuccess login')\n    @allure.label('owner', 'Sergey')\n    @allure.title('Unsuccessful login')\n    @allure.suite('Authorization suite')\n    @mark.index\n    @pytest.mark.parametrize('un_login, un_password, un_text', (incorrect_1, incorrect_2, incorrect_3, incorrect_4))\n    def test_unsuccessful_login(index_page_instance, un_login, un_password, un_text):\n        index_page_instance.enter_username(un_login)\n        index_page_instance.enter_password(un_password)\n        index_page_instance.click_to_login_btn()\n>       index_page_instance.verify_incorrect_login(un_text)\n\ntests/test_index_page.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/index_page.py:46: in verify_incorrect_login\n    self.assert_equal(self.get_text(self.ERROR_TEXT), expected=text)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nactual = 'Username field cannot be empty'\nexpected = 'Username field cannot be emp2ty'\n\n    @staticmethod\n    def assert_equal(actual, expected):\n>       assert actual == expected, AssertionsErrors.ERROR_EQUAL.format(expected, actual)\nE       AssertionError: expected txt: Username field cannot be emp2ty, but actual txt: Username field cannot be empty\n\nsupport/assertions.py:7: AssertionError",
    "steps" : [ {
      "name" : "ввели логин",
      "time" : {
        "start" : 1703954696521,
        "stop" : 1703954696575,
        "duration" : 54
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "login",
        "value" : "''"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "ввели пароль",
      "time" : {
        "start" : 1703954696575,
        "stop" : 1703954696624,
        "duration" : 49
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "password",
        "value" : "'correct_username'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "нажали на кнопку логина",
      "time" : {
        "start" : 1703954696624,
        "stop" : 1703954696665,
        "duration" : 41
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "проверка соответствия ошибки авторизации",
      "time" : {
        "start" : 1703954696665,
        "stop" : 1703954696689,
        "duration" : 24
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: expected txt: Username field cannot be emp2ty, but actual txt: Username field cannot be empty\n",
      "statusTrace" : "  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/test-automation/test-automation/pages/index_page.py\", line 46, in verify_incorrect_login\n    self.assert_equal(self.get_text(self.ERROR_TEXT), expected=text)\n  File \"/home/runner/work/test-automation/test-automation/support/assertions.py\", line 7, in assert_equal\n    assert actual == expected, AssertionsErrors.ERROR_EQUAL.format(expected, actual)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "text",
        "value" : "'Username field cannot be emp2ty'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "7cfcc22978c341de",
      "name" : "log",
      "source" : "7cfcc22978c341de.txt",
      "type" : "text/plain",
      "size" : 261
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "index_page_instance::0",
    "time" : {
      "start" : 1703954696696,
      "stop" : 1703954696753,
      "duration" : 57
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "screenshot_on_failures::0",
    "time" : {
      "start" : 1703954696754,
      "stop" : 1703954696754,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "owner",
    "value" : "Sergey"
  }, {
    "name" : "suite",
    "value" : "Authorization suite"
  }, {
    "name" : "tag",
    "value" : "index"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "host",
    "value" : "fv-az1205-759"
  }, {
    "name" : "thread",
    "value" : "4229-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_index_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "un_login",
    "value" : "''"
  }, {
    "name" : "un_password",
    "value" : "'correct_username'"
  }, {
    "name" : "un_text",
    "value" : "'Username field cannot be emp2ty'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "index" ]
  },
  "source" : "e0629926c83ba0c4.json",
  "parameterValues" : [ "''", "'correct_username'", "'Username field cannot be emp2ty'" ]
}