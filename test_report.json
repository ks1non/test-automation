{"num_tests": 1, "num_failures": 1, "num_skipped": 0, "test_cases": [{"name": "test_enter_value", "result": "fail", "details": "input_and_click_instance = <pages.input_and_click_page.InputAndClickPage object at 0x000001C189C036D0>\n\n    @mark.input_and_click\n    def test_enter_value(input_and_click_instance):\n        input_and_click_instance.enter_items('1')\n        input_and_click_instance.add_value()\n        input_and_click_instance.enter_items('2')\n        input_and_click_instance.add_value()\n>       input_and_click_instance.check_all(2)\n\ntests\\test_input_and_click.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\input_and_click_page.py:42: in check_all\n    self.assert_equal(self.get_all(self.ITEMS), items)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.input_and_click_page.InputAndClickPage object at 0x000001C189C036D0>, locator = ('xpath', '//*[@id=\"items\"]')\n\n    def get_all(self, locator):\n        \"\"\"fff\"\"\"\n>       return self.all_visible(locator).text\nE       AttributeError: 'list' object has no attribute 'text'\n\nbase\\base_objeckt.py:45: AttributeError", "time": 5.075}], "total_time": 5.424}